plugins {
    id "com.android.application"
    id 'com.google.gms.google-services'
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def dotenv = new Properties()
def envFile = rootProject.file("${rootProject.projectDir}/../assets/config/.env")
if (envFile.exists()) {
    envFile.withInputStream { stream -> dotenv.load(stream) }
} else {
    throw new FileNotFoundException("Could not find .env file")
}

ext {
    googleApiKey = dotenv.getProperty('GOOGLE_MAP_API_KEY')
    if (googleApiKey == null) {
        throw new RuntimeException("Could not find GOOGLE_MAP_API_KEY in .env file")
    }
}

ext {
    androidappid = dotenv.getProperty('ANDROID_APP_ID')
    if (androidappid == null) {
        throw new RuntimeException("Could not find GOOGLE_MAP_API_KEY in .env file")
    }
}

def keyStoreProperties = new Properties()
def keyStoreFile = rootProject.file("key.properties")
if (keyStoreFile.exists()) {
    keyStoreProperties.load(new FileInputStream(keyStoreFile))
}

android {
    namespace = "lovestory.flutter_app"
    compileSdkVersion 34
    ndkVersion "25.1.8937393"

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    
    signingConfigs {
        release {
            storeFile file(keyStoreProperties['storeFile'])
            storePassword keyStoreProperties['storePassword']
            keyAlias keyStoreProperties['keyAlias']
            keyPassword keyStoreProperties['keyPassword']
        }
    }

    defaultConfig {
        applicationId = "lovestory.flutter_app"
        minSdkVersion 30
        targetSdkVersion 34
        versionCode 2
        versionName "2.0"

        multiDexEnabled true

        manifestPlaceholders = [
            GOOGLE_MAP_API_KEY: googleApiKey,
            ANDROID_APP_ID: androidappid,
            applicationName: "android.app.Application"
        ]
    }

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            shrinkResources false
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
}
